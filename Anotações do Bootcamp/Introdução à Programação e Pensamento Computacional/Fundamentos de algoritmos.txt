

###Serão apresentados os conceitos básicos para o correto entendimento da construção de algoritmos.






TIPOLOGIA E VARIÁVEIS


Dados(numéricos, caracteres e lógicos) e instruções -> Informação


Numéricos = Inteiros e reais

Caractere = Tudo aquilo que não representamos com números

Lógico = Verdadeiro (1) e Falso (0) 






O QUE É UMA VARIÁVEL?

Um tipo de estrutura mutável que pode variar no seu valor e modificar o seu conteúdo. Ela recebe algum tipo de dado e não tem certeza de seu valor. É restrita ao seu tipo.







PAPÉIS DAS VARIÁVEIS

Variável de ação: Modifica o estado do programa

Variável de controle: Controla alguma estrutura ou alguma equação






INSTRUÇÕES PRIMITIVAS

1 - Determinam as ações que iremos executar nos nosso dados, geralmente operações matemáticas e para isso utilizamos os operadores

2 - Variáveis e Cosntantes com operadores Binários e Unários

3 - As intruões são linguagens de palavra-chave de uma determinada programação que tem por finalidade comandar um computador que irá tratar os dados


Obs: O mesmo comando possui sintaxe particular para cada linguagem de programação.






ESTRUTURAS CONDICIONAIS E OPERADORES


Implicação de uma suposição ou hipótese, dada uma condição.


1 - Caso a condição seja satisfeita (Executa o programa)

2 -  Caso a condição não seja satisfeita (Não executa)





TIPOS DE CONDIÇÕES



1 - Simples: Condição -> Operação


2 - Composta: Condição -> Exceção --> Operação


3 - Encadeada: Condição -> Operação / Condição -> Exceção --> Operação






OPERADORES LÓGICOS

Verificação de verdadeiro ou falso

Operador And => Interseção

Operador Or => União

Operador Not => Tudo que não está em um conjunto






ESTRUTURA DE REPETIÇÃO

Quando uma parte do código precisa ser executado mais de uma vez, ou seja uma repetição, laço ou loop. 

Para definir essas repetições existem as condições de parada.




VANTAGENS DE USAR UMA ESTRUTURA DE REPETIÇÃO

1 - Redução de linhas

2 - Compreensão facilitada

3 - Redução do erro


Alguns exemplos:

Enquanto... faça

Repita... até

Para... de... até... faça (For)





EXEMPLOS DO DIA A DIA


"Enquanto houver grama, corto a grama"

1 - Analisar grama
2 - Enquanto estiver alta
3 - Aparar grama
4 - Atualizar grama





VETORES E MATRIZES

Definição formal de vetor : "Um vetor é caracterizado por uma variável dimensionada com tamanho pré-fixado"

Vetor é um container ou uma matriz unidimensional 

Definição formal de matriz: Matriz é uma tabela organizada em linhas e colunas no formato m x n, onde m representa o número de linhas (horizontal) e n o número de colunas (vertical)"

Obs: As matrizes são coleções de variáveis e vetores e para navegar entre os vetores precisamos dos índices. Eles serão usados para pesquisar valores e puxar elementos para a matriz


Vantagem: Os vetores economizam em código e armazenamento de memória. 




O QUE SÃO FUNÇÕES?


As funções vêm do conceito da matemática

Também são conhecidas como:

1 - Método
2 - Subalgoritmo
3 - Subprograma
4 - Sub-rotina
5 - Bloco


A técnica modular em lógica está associada a função







DEFINIÇÃO FORMAL

As funções, são blocos de instruções que realizam tarefas específicas. Ou seja, trechos de código com tarefas específicas que podem ser chamados para o seu código principal -> Modularização do problema.







VANTAGENS DA MODULARIZAÇÃO

1 - Código mais claro e conciso 

2 - Caso queria fazer alguma alteração, vai ser somente nesse ponto específico e não no código como um todo

3 - Reutilizaçã0o de instruções







ESTRUTURA DA FUNÇÃO

Definição / Nome / Invocação /  Variável local





INSTRUÇÕES DE ENTRADA E DE SAÍDA


Dado que tenho um número de dados, eu posso através de um algoritmo exprimir os resultados por meio de instruções que manipulam esses dados. 


Definição formal da entrada: Consiste na inserção e recebimento de dados do mundo real por meio de ação de alguma interface, seja teclado, mouse, arquivos, entre outros. 


Definição formal da saída: Consiste na impressão dos dados do mundo abstrato, digital por meio de ação de alguma interface. Os formatos podem variar desde simples arquivos binários até compelxas querys de banco de dados. 



TIPOS DE SAÍDA

1 - Saída programada: Pode ser condicional ou não, e aguarda o dispostivo para estar imprimindo os resultados.  


2 - Saída por interrupção : Definida pelos periféricos. Ou seja, aconteceu algo no ambiente computacional pelos periféricos e ocasionou uma saída.




EVENTOS DA SAÍDA

1 -  Bem sucedida

2 -  Erro de sintaxe ou outro

3 - Erros de programação

4 -  Problemas com a interface














